[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/eutils.js",
    "content": "\r\n/**\r\n* A utilities class\r\n* @class EUtilsSingleton\r\n* @license EUtils does not have a license at this time. For licensing contact the author\r\n* @author https://github.com/doubleactii\r\n* Copyright (c) 2023 Evitca Studio\r\n*/\r\nclass EUtilsSingleton {\r\n\t/**\r\n\t * The version of the library\r\n\t */\r\n\tstatic version = '1.0.0';\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Object storing all color objects being transitioned at the moment\r\n\t\t * \r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.transitions = {};\r\n\t\t/**\r\n\t\t * An array storing all the reserved unique IDS\r\n\t\t * \r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.storedIDs = [];\r\n\t}\r\n\t/**\r\n\t * Generates a random decimal number between two numbers with a specified number of decimal places.\r\n\t * \r\n\t * @param {number} pNum1 - The first number to use for generating the random decimal number.\r\n\t * @param {number} pNum2 - The second number to use for generating the random decimal number.\r\n\t * @param {number} [pPlaces=1] - The number of decimal places to include in the generated random decimal number. Defaults to 1 if not provided.\r\n\t * @returns {number} A random decimal number between the two numbers with the specified number of decimal places.\r\n\t */\r\n\tdecimalRand(pNum1, pNum2, pPlaces = 1) {\r\n\t\tconst result = Number((Math.random() * (pNum1 - pNum2) + pNum2).toFixed(pPlaces));\r\n\t\treturn (result >= 1 ? Math.floor(result) : result);\r\n\t}\r\n\t/**\r\n\t * Generates a random decimal number between two numbers with a specified number of decimal places.\r\n\t * \r\n\t * @param {number} pNum1 - The first number to use for generating the random decimal number.\r\n\t * @param {number} pNum2 - The second number to use for generating the random decimal number.\r\n\t * @returns {number} A random decimal number between the two numbers with the specified number of decimal places.\r\n\t */\r\n\trand(pNum1, pNum2) {\r\n\t\tconst result = Number((Math.random() * (pNum1 - pNum2) + pNum2));\r\n\t\treturn Math.round(result);\r\n\t}\r\n\t/**\r\n\t * Calculates the percentage of a value relative to a total value.\r\n\t * \r\n\t * @param {number} pValue - The value to calculate the percentage of.\r\n\t * @param {number} pTotalValue - The total value to calculate the percentage relative to.\r\n\t * @returns {number} The percentage of the value relative to the total value.\r\n\t */\r\n\tgetPercentage(pValue, pTotalValue) {\r\n\t\treturn (100 * pValue) / pTotalValue;\r\n\t}\r\n\t/**\r\n\t * Clamps a number between a minimum and maximum value.\r\n\t * \r\n\t * @param {number} pNumber - The number to clamp.\r\n\t * @param {number} [pMin=0] - The minimum value to clamp the number to. Defaults to 0 if not provided.\r\n\t * @param {number} [pMax=1] - The maximum value to clamp the number to. Defaults to 1 if not provided.\r\n\t * @returns {number} The clamped number between the minimum and maximum values.\r\n\t */\r\n\tclamp(pNumber, pMin = 0, pMax = 1) {\r\n\t\treturn Math.max(pMin, Math.min(pNumber, pMax));\r\n\t}\r\n\t/**\r\n\t * Linearly interpolates between two values by a specified amount.\r\n\t * \r\n\t * @param {number} pStart - The start value to interpolate from.\r\n\t * @param {number} pEnd - The end value to interpolate to.\r\n\t * @param {number} pAmount - The amount to interpolate between the start and end values.\r\n\t * @returns {number} The interpolated value between the start and end values based on the specified amount.\r\n\t */\r\n\tlerp(pStart, pEnd, pAmount) {\r\n\t\treturn (1-pAmount)*pStart+pAmount*pEnd;\r\n\t}\r\n\t/**\r\n\t * Linearly interpolates between two values by a specified amount and returns the result as a floored integer.\r\n\t * \r\n\t * @param {number} pStart - The start value to interpolate from.\r\n\t * @param {number} pEnd - The end value to interpolate to.\r\n\t * @param {number} pAmount - The amount to interpolate between the start and end values.\r\n\t * @returns {number} The interpolated value between the start and end values based on the specified amount, rounded down to the nearest integer.\r\n\t */\r\n\tflooredLerp(pStart, pEnd, pAmount) {\r\n\t\treturn Math.floor(this.lerp(pStart, pEnd, pAmount));\r\n\t}\r\n\t/**\r\n\t * Rounds a number to a specified number of decimal places.\r\n\t * \r\n\t * @param {number} pNumber - The number to round.\r\n\t * @param {number} [pPlace=1] - The number of decimal places to round to. Defaults to 1 if not provided.\r\n\t * @returns {number} The rounded number to the specified number of decimal places.\r\n\t */\r\n\tround(pNumber, pPlace=1) {\r\n\t\treturn Math.round(pPlace * pNumber) / pPlace;\r\n\t}\r\n\t/**\r\n\t * Normalizes a value between a minimum and maximum value.\r\n\t * \r\n\t * @param {number} pVal - The value to normalize.\r\n\t * @param {number} pMin - The minimum value for normalization.\r\n\t * @param {number} pMax - The maximum value for normalization.\r\n\t * @returns {number} The normalized value between 0 and 1 based on the input value's position between the minimum and maximum values.\r\n\t * If the difference between pMax and pMin is 0, returns 1 to avoid dividing by zero.\r\n\t */\r\n\tnormalize(pVal, pMin, pMax) {\r\n\t\tif (pMax - pMin === 0) return 1;\r\n\t\treturn (pVal - pMin) / (pMax - pMin);\r\n\t}\r\n\t/**\r\n\t * Checks if a value is within a range of minimum and maximum values (inclusive).\r\n\t * \r\n\t * @param {number} pVal - The value to check.\r\n\t * @param {number} pMin - The minimum value of the range to check against.\r\n\t * @param {number} pMax - The maximum value of the range to check against.\r\n\t * @returns {boolean} True if the value is within the range (inclusive), false otherwise.\r\n\t */\r\n\twithin(pVal, pMin, pMax) {\r\n\t\treturn pVal >= pMin && pVal <= pMax;\r\n\t}\r\n\t/**\r\n\t * Formats a number by rounding it to the nearest integer and adding commas to separate thousands places.\r\n\t * \r\n\t * @param {number} pNum - The number to format.\r\n\t * @returns {string} A string representation of the formatted number.\r\n\t */\r\n\tformatIntegerWithCommas(pNum) {\r\n\t\treturn pNum.toFixed().toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n\t}\r\n\t/**\r\n\t * Converts degrees to radians.\r\n\t * \r\n\t * @param {number} pDegrees - The angle in degrees.\r\n\t * @returns {number} The angle in radians.\r\n\t */\r\n\tdegreesToRadians(pDegrees) {\r\n\t\treturn pDegrees * (Math.PI / 180);\r\n\t}\r\n\t/**\r\n\t * Converts radians to degrees.\r\n\t * \r\n\t * @param {number} pRadians - The angle in radians.\r\n\t * @returns {number} The angle in degrees.\r\n\t */\r\n\tradiansToDegrees(pRadians) {\r\n\t\treturn pRadians * (180 / Math.PI);\r\n\t}\r\n\t/**\r\n\t * Returns a random element from the given array.\r\n\t * \r\n\t * @param {Array} pArray - The input array.\r\n\t * @returns {*} A random element from the array.\r\n\t */\r\n\tpick(pArray) {\r\n\t\tconst randomIndex = Math.floor(Math.random() * pArray.length);\r\n\t\treturn pArray[randomIndex];\r\n\t}\r\n\t/**\r\n\t * Returns true with probability proportional to the given number.\r\n\t * The higher the number, the higher the chance of returning true.\r\n\t * \r\n\t * @param {number} pChance - The probability value, between 0 and 100 (inclusive).\r\n\t * @returns {boolean} - Returns true or false, based on the probability value.\r\n\t */\r\n\tprob(pChance) {\r\n\t\tif (pChance <= 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (pChance >= 100) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tconst randomNumber = Math.floor(Math.random() * 100) + 1;\r\n\t\treturn randomNumber <= pChance;\r\n\t}\r\n\t/**\r\n\t * Gets the inverse direction of the direction passed\r\n\t * \r\n\t * @param {string} pDir - The direction to get the inverse of.\r\n\t * @returns {string} The inverse direction\r\n\t */\r\n\tgetInverseDir(pDir) {\r\n\t\tswitch (pDir) {\r\n\t\t\tcase 'north':\r\n\t\t\t\treturn 'south';\r\n\t\t\tcase 'south':\r\n\t\t\t\treturn 'north';\r\n\t\t\tcase 'east':\r\n\t\t\t\treturn 'west';\r\n\t\t\tcase 'west':\r\n\t\t\t\treturn 'east';\r\n\t\t\tcase 'northeast':\r\n\t\t\t\treturn 'southwest';\r\n\t\t\tcase 'northwest':\r\n\t\t\t\treturn 'southeast';\r\n\t\t\tcase 'southeast':\r\n\t\t\t\treturn 'northwest';\r\n\t\t\tcase 'southwest':\r\n\t\t\t\treturn 'northeast';\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(`The direction ${pDir} is not supported.`);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Calculates the angle (in radians) from a given direction.\r\n\t * \r\n\t * @param {string} pDir - The direction to calculate the angle from.\r\n\t * @returns {number} The angle (in radians) associated with the given direction.\r\n\t * @throws {Error} Throws an error if the direction is not recognized.\r\n\t */\r\n\tgetAngleFromDir(pDir) {\r\n\t\tswitch (pDir) {\r\n\t\t\tcase 'north':\r\n\t\t\t\treturn (Math.PI / 2);\r\n\t\t\tcase 'south':\r\n\t\t\t\treturn (Math.PI * 3) / 2;\r\n\t\t\tcase 'east':\r\n\t\t\t\treturn (Math.PI * 2);\r\n\t\t\tcase 'west':\r\n\t\t\t\treturn Math.PI;\r\n\t\t\tcase 'northwest':\r\n\t\t\t\treturn (Math.PI * 3) / 4;\r\n\t\t\tcase 'northeast':\r\n\t\t\t\treturn Math.PI / 4;\r\n\t\t\tcase 'southwest':\r\n\t\t\t\treturn (Math.PI * 5) / 4;\r\n\t\t\tcase 'southeast':\r\n\t\t\t\treturn (Math.PI * 7) / 4;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(`The direction ${pDir} is not supported.`);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Generates a unique id\r\n\t * \r\n\t * @param {string} pIDLength - The length of the ID to create \r\n\t * @returns A unique ID\r\n\t */\r\n\tgenerateID(pIDLength = 7) {\r\n\t\tconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\t\tconst makeID = function() {\r\n\t\t\tlet ID = '';\r\n\t\t\tfor (let i = 0; i < pIDLength; i++) {\r\n\t\t\t\tID += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\t\t\t}\r\n\t\t\treturn ID;\r\n\t\t}\r\n\t\tlet ID = makeID();\r\n\t\twhile(this.storedIDs.includes(ID)) {\r\n\t\t\tID = makeID();\r\n\t\t}\r\n\t\tthis.storedIDs.push(ID);\r\n\t\treturn ID;\r\n\t}\r\n\t/**\r\n\t * Converts a color in decimal format into hex format\r\n\t * \r\n\t * @param {number} pDecimal - The color in decimal format\r\n\t * @param {number} pChars - The length to make the hex string\r\n\t * @returns The decimal color converted into hex format\r\n\t */\r\n\tdecimalToHex(pDecimal, pChars = 6) {\r\n\t\treturn '#' + (pDecimal + Math.pow(16, pChars)).toString(16).slice(-pChars).toUpperCase();\r\n\t}\r\n\t/**\r\n\t * Add intensity to this color to get a brighter or dimmer effect\r\n\t * \r\n\t * @param {string|number} pColor - Color in hex format or decimal format\r\n\t * @param {number} pPercent - The percent of brightness to add to this color\r\n\t * @returns \r\n\t */\r\n\taddIntensity(pColor, pPercent) {\r\n\t\tconst rgb = this.grabColor(pColor).rgbArray;\r\n\t\tconst r = rgb[0];\r\n\t\tconst g = rgb[1];\r\n\t\tconst b = rgb[2];\r\n\t\tlet rr = 0;\r\n\t\tlet rg = 0;\r\n\t\tlet rb = 0;\r\n\t\tconst black = (r === 0 && g === 0 && b === 0) ? true : false;\r\n\t\tif (r || black) rr = r + Math.floor((255 * pPercent) / 100);\r\n\t\tif (g || black) rg = g + Math.floor((255 * pPercent) / 100);\r\n\t\tif (b || black) rb = b + Math.floor((255 * pPercent) / 100);\r\n\t\treturn this.grabColor(this.clamp(rr, 0, 255), this.clamp(rg, 0, 255), this.clamp(rb, 0, 255)).hex\r\n\t}\r\n\t/**\r\n\t * Convert a color to different formats or get a random color\r\n\t * \r\n\t * @param {string|number} pSwitch - A hex string representing a color (with or without the tag)\r\n\t * A color formatted in the decimal format. Or the r value of a rgb color.\r\n\t * @param {number} [g] g value of a rgb color\r\n\t * @param {number} [b] b value of a rgb color\r\n\t * @returns {ColorObject} A color object with various different export options.\r\n\t * hex, hexTagless, rgb, rgbArray, rgbObject, rgbNormal, decimal formats.\r\n\t */\r\n\tgrabColor(pSwitch = this.getRandomColor(), g, b) {\r\n\t\tlet hex, cr, cg, cb;\r\n\t\tif (typeof(pSwitch) === 'number' && typeof(g) === 'number' && typeof(b) === 'number') {\r\n\t\t\tcr = this.clamp(pSwitch, 0, 255);\r\n\t\t\tcg = this.clamp(g, 0, 255);\r\n\t\t\tcb = this.clamp(b, 0, 255);\r\n\t\t\tconst craftString = function(pColor) {\r\n\t\t\t\treturn pColor.toString(16).padStart(2, '0');\r\n\t\t\t}\r\n\t\t\thex = '#' + [cr, cg, cb].map(craftString).join('');\r\n\t\t} else {\r\n\t\t\tif (typeof(pSwitch) === 'number') {\r\n\t\t\t\tpSwitch = this.decimalToHex(pSwitch);\r\n\t\t\t}\r\n\t\t\thex = pSwitch;\r\n\t\t\tpSwitch = pSwitch.replace('#', '');\r\n\t\t\tif (pSwitch.length === 3) {\r\n\t\t\t\tpSwitch = pSwitch.replace(new RegExp('(.)', 'g'), '$1$1');\r\n\t\t\t}\r\n\t\t\tpSwitch = pSwitch.match(new RegExp('..', 'g'));\r\n\t\t\tcr = this.clamp(parseInt(pSwitch[0], 16), 0, 255);\r\n\t\t\tcg = this.clamp(parseInt(pSwitch[1], 16), 0, 255);\r\n\t\t\tcb = this.clamp(parseInt(pSwitch[2], 16), 0, 255);\r\n\t\t}\r\n\t\treturn { 'hex': hex.toLowerCase(), 'hexTagless': hex.replace('#', '').toLowerCase(), 'rgb': 'rgb('+cr+','+cg+','+cb+')', 'rgbArray': [cr, cg, cb], 'rgbObject': { 'r': cr, 'g': cg, 'b': cb }, 'rgbNormal': [Math.round(cr/255 * 100) / 100, Math.round(cg/255 * 100) / 100, Math.round(cb/255 * 100) / 100], 'decimal': (cr << 16 | cg << 8 | cb) };\r\n\t}\r\n\t/**\r\n\t * Gets a random color\r\n\t * \r\n\t * @returns {string} A random color in the hex format\r\n\t */\r\n\tgetRandomColor() {\r\n\t\tconst chars = '0123456789ABCDEF';\r\n\t\tlet color = '#';\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tcolor += chars[Math.floor(Math.random() * 16)];\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\t/**\r\n\t * Gets a random color between two colors\r\n\t * \r\n\t * @param {number|string} pColor1 - The first color to get a color between\r\n\t * @param {number|string} pColor2 - The second color to get a color between\r\n\t * @param {number} [pAmount=0.5] - The closer the random color will be to either input colors on a range of 0-1\r\n\t * 0 to 0.5 (closer to pColor1)\r\n\t * 0.5 to 1 (closer to pColor2)\r\n\t * @returns {string} A random color in the decimal format\r\n\t */\r\n\tgetRandomColorBetween(pColor1, pColor2, pAmount = 0.5) {\r\n\t\t// u is the amount of the lerp 0-1\r\n\t\treturn this.flooredLerp(this.grabColor(pColor1).decimal, this.grabColor(pColor2).decimal, pAmount);\r\n\t}\r\n\t/**\r\n\t * Transition a color to another color in pDuration time.\r\n\t * \r\n\t * @param {Object} pInstance - The instance to transition it's color property.\r\n\t * pInstance's color will be transitioned either via pInstance.color = newColor\r\n\t * or\r\n\t * pInstance.color.tint = newColor (if the color is defined as an object)\r\n\t * @param {string|number} pStartColor - The start color\r\n\t * @param {string|number} pEndColor - The end color\r\n\t * @param {number} pDuration - The duration of the transition\r\n\t * @param {Function} pIterativeCallback - Callback to call every tick of the transition\r\n\t * @param {Function} pEndCallback - Callback to call at the end of the transition\r\n\t * @returns An ID that references this transition to be passed to cancelTransition to stop an ongoing transition.\r\n\t */\r\n\ttransitionColor(pInstance, pStartColor='#000', pEndColor='#fff', pDuration=1000, pIterativeCallback, pEndCallback) {\r\n\t\t// Cannot use this API on the server\r\n\t\tif (!globalThis.window) return;\r\n\t\tconst iterativeCallback = typeof(pIterativeCallback) === 'function' ? pIterativeCallback : null;\r\n\t\tconst endCallback = typeof(pEndCallback) === 'function' ? pEndCallback : null;\r\n\t\tlet id;\r\n\t\tlet isParticle;\r\n\t\tlet isTintObject;\r\n\r\n\t\tif (pInstance) {\r\n\t\t\tid = pInstance.id ? pInstance.id : this.generateID();\r\n\t\t\tisParticle = (pInstance.type === 'GeneratedParticle');\r\n\t\t\tisTintObject = (typeof(pInstance.color) === 'object' && pInstance.color.constructor === Object ? true : false);\r\n\t\t\tif (this.transitions[id]) this.cancelTransitionColor(id);\r\n\t\t} else {\r\n\t\t\tid = this.generateID();\r\n\t\t}\r\n\t\t\t\r\n\t\tthis.transitions[id] = {\r\n\t\t\t'duration': pDuration,\r\n\t\t\t'timeTracker': isParticle ? pInstance.info.lifetime : 0\r\n\t\t};\r\n\r\n\t\tconst rgbStartColor = this.grabColor(pStartColor).rgbArray;\r\n\t\tconst rgbEndColor = this.grabColor(pEndColor).rgbArray;\r\n\r\n\t\tconst self = this;\r\n\t\tthis.transitions[id].step = (pTimeStamp) => {\r\n\t\t\tif (self.transitions[id]) {\r\n\t\t\t\tif (isParticle) {\r\n\t\t\t\t\tif (pInstance.info) {\r\n\t\t\t\t\t\tif (pInstance.info.owner) {\r\n\t\t\t\t\t\t\tif (pInstance.info.owner.settings.paused) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (self.transitions[id]) this.cancelTransitionColor(id);\r\n\t\t\t\t\t\treturn;\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst now = pTimeStamp;\r\n\t\t\t\tif (!self.transitions[id].lastTime) self.transitions[id].lastTime = now;\r\n\t\t\t\tconst elapsed = now - self.transitions[id].lastTime;\r\n\t\t\t\t// Time tracker is used rather than lastStamp - startStamp because this currently takes into account particles passed in (this will be removed in the future and use the former method)\r\n\t\t\t\tself.transitions[id].timeTracker += elapsed;\r\n\t\t\t\t// The max value of percentage is 1, so we clamp it at 1\r\n\t\t\t\tconst percentage = Math.min(self.transitions[id].timeTracker / self.transitions[id].duration, 1);\r\n\t\t\t\t\r\n\t\t\t\tconst r = parseInt(self.lerp(rgbStartColor[0], rgbEndColor[0], percentage), 10);\r\n\t\t\t\tconst g = parseInt(self.lerp(rgbStartColor[1], rgbEndColor[1], percentage), 10);\r\n\t\t\t\tconst b = parseInt(self.lerp(rgbStartColor[2], rgbEndColor[2], percentage), 10);\r\n\t\t\t\tconst color = self.grabColor(r, g, b);\r\n\r\n\t\t\t\tif (iterativeCallback) iterativeCallback(color);\r\n\r\n\t\t\t\tif (pInstance) {\r\n\t\t\t\t\tif (isTintObject) {\r\n\t\t\t\t\t\tpInstance.color.tint = color.decimal;\r\n\t\t\t\t\t\tpInstance.color = pInstance.color;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpInstance.color = color.hex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (percentage >= 1 || self.transitions[id].timeTracker >= pDuration) {\r\n\t\t\t\t\tif (self.transitions[id]) this.cancelTransitionColor(id);\r\n\t\t\t\t\tif (endCallback) endCallback(color);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tself.transitions[id].req = globalThis.requestAnimationFrame(self.transitions[id].step);\r\n\t\t\t\tself.transitions[id].lastTime = now;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.transitions[id].req = globalThis.requestAnimationFrame(this.transitions[id].step);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * Cancels an ongoing transition\r\n\t * \r\n\t * @param {string} pID - The ID of the ongoing transition to cancel\r\n\t */\r\n\tcancelTransitionColor(pID) {\r\n\t\tif (this.transitions[pID]) {\r\n\t\t\tglobalThis.cancelAnimationFrame(this.transitions[pID].req);\r\n\t\t\tdelete this.transitions[pID];\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Calculates the position of a point after rotating it around a center point by a given angle.\r\n\t * \r\n\t * @param {object} pRect - The rectangle object to rotate the point around.\r\n\t * pRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle.\r\n\t * @param {number} pTheta - The angle (in radians) to rotate the point by.\r\n\t * @param {object} pPoint - The point object to rotate around the center of the rectangle.\r\n\t * @param {number} pPoint.x - The x-coordinate of the point to rotate.\r\n\t * @param {number} pPoint.y - The y-coordinate of the point to rotate.\r\n\t * @returns {object} An object with the rotated point's new x and y coordinates.\r\n\t */\r\n\tgetPointRotated(pRect, pTheta, pPoint) {\r\n\t\t// cx, cy - center of square coordinates\r\n\t\t// x, y - coordinates of a corner point of the square\r\n\t\t// theta is the angle of rotation\r\n\t\tconst cx = pRect.x + pRect.width * (typeof(pRect.anchor) === 'object' && pRect.anchor.x ? pRect.anchor.x : 0.5);\r\n\t\tconst cy = pRect.y + pRect.height * (typeof(pRect.anchor) === 'object' && pRect.anchor.y ? pRect.anchor.y : 0.5);\r\n\r\n\t\t// translate point to origin\r\n\t\tconst tempX = pPoint.x - cx;\r\n\t\tconst tempY = pPoint.y - cy;\r\n\r\n\t\t// now apply rotation\r\n\t\tconst rotatedX = tempX*Math.cos(pTheta) - tempY*(-Math.sin(pTheta));\r\n\t\tconst rotatedY = tempX*(-Math.sin(pTheta)) + tempY*Math.cos(pTheta);\r\n\r\n\t\t// translate back\r\n\t\tconst x = rotatedX + cx;\r\n\t\tconst y = rotatedY + cy;\r\n\t\treturn { 'x': x, 'y': y };\r\n\t}\r\n\t/**\r\n\t/**\r\n\t * Calculates the position of a rectangle's corner points and center point after rotating it around a center point by a given angle.\r\n\t * \r\n\t * @param {object} pRect - The rectangle object to rotate the point around.\r\n\t * pRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle.\r\n\t * @param {number} pTheta - The angle (in radians) to rotate the point by.\r\n\t * @returns {object} An object with the rotated rectangle's new corner points and center points.\r\n\t */\r\n\tgetPointsOfRotatedRect(pRect, pTheta) {\r\n\t\tconst tl = this.getPointRotated(pRect, pTheta, { 'x': pRect.x, 'y': pRect.y });\r\n\t\tconst tr = this.getPointRotated(pRect, pTheta, { 'x': pRect.x + pRect.width, 'y': pRect.y });\r\n\t\tconst bl = this.getPointRotated(pRect, pTheta, { 'x': pRect.x, 'y': pRect.y + pRect.height });\r\n\t\tconst br = this.getPointRotated(pRect, pTheta, { 'x': pRect.x + pRect.width, 'y': pRect.y + pRect.height });\r\n\t\tconst center = this.getPointRotated(pRect, pTheta, { 'x': pRect.x + pRect.width / 2, 'y': pRect.y + pRect.height / 2 });\r\n\t\treturn { 'tl': tl, 'tr': tr, 'bl': bl, 'br': br, 'center': center };\r\n\t}\r\n}\r\nexport const EUtils = new EUtilsSingleton();\r\n",
    "static": true,
    "longname": "Z:/Business/Evitca Studio/github/EUtils/src/eutils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "EUtils",
    "memberof": "src/eutils.js",
    "static": true,
    "longname": "src/eutils.js~EUtils",
    "access": "public",
    "export": true,
    "importPath": "./src/eutils.js",
    "importStyle": "{EUtils}",
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "type": {
      "types": [
        "src/eutils.js~EUtilsSingleton"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "EUtilsSingleton",
    "memberof": "src/eutils.js",
    "static": true,
    "longname": "src/eutils.js~EUtilsSingleton",
    "access": "public",
    "export": true,
    "importPath": "./src/eutils.js",
    "importStyle": null,
    "description": "A utilities class",
    "lineNumber": 9,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "EUtilsSingleton"
      },
      {
        "tagName": "@license",
        "tagValue": "EUtils does not have a license at this time. For licensing contact the author"
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii\nCopyright (c) 2023 Evitca Studio"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "version",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "static": true,
    "longname": "src/eutils.js~EUtilsSingleton.version",
    "access": "public",
    "description": "The version of the library",
    "lineNumber": 13,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "transitions",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#transitions",
    "access": "public",
    "description": "Object storing all color objects being transitioned at the moment",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "storedIDs",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#storedIDs",
    "access": "public",
    "description": "An array storing all the reserved unique IDS",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "decimalRand",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#decimalRand",
    "access": "public",
    "description": "Generates a random decimal number between two numbers with a specified number of decimal places.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} A random decimal number between the two numbers with the specified number of decimal places."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum1",
        "description": "The first number to use for generating the random decimal number."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum2",
        "description": "The second number to use for generating the random decimal number."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pPlaces",
        "description": "The number of decimal places to include in the generated random decimal number. Defaults to 1 if not provided."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A random decimal number between the two numbers with the specified number of decimal places."
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "rand",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#rand",
    "access": "public",
    "description": "Generates a random decimal number between two numbers with a specified number of decimal places.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} A random decimal number between the two numbers with the specified number of decimal places."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum1",
        "description": "The first number to use for generating the random decimal number."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum2",
        "description": "The second number to use for generating the random decimal number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A random decimal number between the two numbers with the specified number of decimal places."
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "getPercentage",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getPercentage",
    "access": "public",
    "description": "Calculates the percentage of a value relative to a total value.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The percentage of the value relative to the total value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pValue",
        "description": "The value to calculate the percentage of."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTotalValue",
        "description": "The total value to calculate the percentage relative to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The percentage of the value relative to the total value."
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "clamp",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#clamp",
    "access": "public",
    "description": "Clamps a number between a minimum and maximum value.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The clamped number between the minimum and maximum values."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNumber",
        "description": "The number to clamp."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "pMin",
        "description": "The minimum value to clamp the number to. Defaults to 0 if not provided."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pMax",
        "description": "The maximum value to clamp the number to. Defaults to 1 if not provided."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The clamped number between the minimum and maximum values."
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "lerp",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#lerp",
    "access": "public",
    "description": "Linearly interpolates between two values by a specified amount.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The interpolated value between the start and end values based on the specified amount."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStart",
        "description": "The start value to interpolate from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEnd",
        "description": "The end value to interpolate to."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAmount",
        "description": "The amount to interpolate between the start and end values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The interpolated value between the start and end values based on the specified amount."
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "flooredLerp",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#flooredLerp",
    "access": "public",
    "description": "Linearly interpolates between two values by a specified amount and returns the result as a floored integer.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The interpolated value between the start and end values based on the specified amount, rounded down to the nearest integer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStart",
        "description": "The start value to interpolate from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEnd",
        "description": "The end value to interpolate to."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAmount",
        "description": "The amount to interpolate between the start and end values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The interpolated value between the start and end values based on the specified amount, rounded down to the nearest integer."
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "round",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#round",
    "access": "public",
    "description": "Rounds a number to a specified number of decimal places.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The rounded number to the specified number of decimal places."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNumber",
        "description": "The number to round."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pPlace",
        "description": "The number of decimal places to round to. Defaults to 1 if not provided."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The rounded number to the specified number of decimal places."
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "normalize",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#normalize",
    "access": "public",
    "description": "Normalizes a value between a minimum and maximum value.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The normalized value between 0 and 1 based on the input value's position between the minimum and maximum values.\nIf the difference between pMax and pMin is 0, returns 1 to avoid dividing by zero."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVal",
        "description": "The value to normalize."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The minimum value for normalization."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum value for normalization."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The normalized value between 0 and 1 based on the input value's position between the minimum and maximum values.\nIf the difference between pMax and pMin is 0, returns 1 to avoid dividing by zero."
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "within",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#within",
    "access": "public",
    "description": "Checks if a value is within a range of minimum and maximum values (inclusive).",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if the value is within the range (inclusive), false otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVal",
        "description": "The value to check."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The minimum value of the range to check against."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum value of the range to check against."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the value is within the range (inclusive), false otherwise."
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "formatIntegerWithCommas",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#formatIntegerWithCommas",
    "access": "public",
    "description": "Formats a number by rounding it to the nearest integer and adding commas to separate thousands places.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A string representation of the formatted number."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum",
        "description": "The number to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A string representation of the formatted number."
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "degreesToRadians",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#degreesToRadians",
    "access": "public",
    "description": "Converts degrees to radians.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle in radians."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDegrees",
        "description": "The angle in degrees."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle in radians."
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "radiansToDegrees",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#radiansToDegrees",
    "access": "public",
    "description": "Converts radians to degrees.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle in degrees."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pRadians",
        "description": "The angle in radians."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle in degrees."
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "pick",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#pick",
    "access": "public",
    "description": "Returns a random element from the given array.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} A random element from the array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pArray",
        "description": "The input array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A random element from the array."
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "prob",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#prob",
    "access": "public",
    "description": "Returns true with probability proportional to the given number.\nThe higher the number, the higher the chance of returning true.",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - Returns true or false, based on the probability value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pChance",
        "description": "The probability value, between 0 and 100 (inclusive)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true or false, based on the probability value."
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "getInverseDir",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getInverseDir",
    "access": "public",
    "description": "Gets the inverse direction of the direction passed",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The inverse direction"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pDir",
        "description": "The direction to get the inverse of."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The inverse direction"
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "getAngleFromDir",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getAngleFromDir",
    "access": "public",
    "description": "Calculates the angle (in radians) from a given direction.",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle (in radians) associated with the given direction."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pDir",
        "description": "The direction to calculate the angle from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle (in radians) associated with the given direction."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if the direction is not recognized."
      }
    ]
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "generateID",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#generateID",
    "access": "public",
    "description": "Generates a unique id",
    "lineNumber": 245,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "A unique ID"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pIDLength",
        "description": "The length of the ID to create"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A unique ID"
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "decimalToHex",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#decimalToHex",
    "access": "public",
    "description": "Converts a color in decimal format into hex format",
    "lineNumber": 268,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The decimal color converted into hex format"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDecimal",
        "description": "The color in decimal format"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pChars",
        "description": "The length to make the hex string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The decimal color converted into hex format"
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "addIntensity",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#addIntensity",
    "access": "public",
    "description": "Add intensity to this color to get a brighter or dimmer effect",
    "lineNumber": 278,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pColor",
        "description": "Color in hex format or decimal format"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPercent",
        "description": "The percent of brightness to add to this color"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "grabColor",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#grabColor",
    "access": "public",
    "description": "Convert a color to different formats or get a random color",
    "lineNumber": 302,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ColorObject} A color object with various different export options.\nhex, hexTagless, rgb, rgbArray, rgbObject, rgbNormal, decimal formats."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pSwitch",
        "description": "A hex string representing a color (with or without the tag)\nA color formatted in the decimal format. Or the r value of a rgb color."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "g",
        "description": "g value of a rgb color"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "b",
        "description": "b value of a rgb color"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ColorObject"
      ],
      "spread": false,
      "description": "A color object with various different export options.\nhex, hexTagless, rgb, rgbArray, rgbObject, rgbNormal, decimal formats."
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getRandomColor",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getRandomColor",
    "access": "public",
    "description": "Gets a random color",
    "lineNumber": 333,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A random color in the hex format"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A random color in the hex format"
    },
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getRandomColorBetween",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getRandomColorBetween",
    "access": "public",
    "description": "Gets a random color between two colors",
    "lineNumber": 351,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A random color in the decimal format"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pColor1",
        "description": "The first color to get a color between"
      },
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pColor2",
        "description": "The second color to get a color between"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.5",
        "defaultRaw": 0.5,
        "name": "pAmount",
        "description": "The closer the random color will be to either input colors on a range of 0-1\n0 to 0.5 (closer to pColor1)\n0.5 to 1 (closer to pColor2)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A random color in the decimal format"
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "transitionColor",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#transitionColor",
    "access": "public",
    "description": "Transition a color to another color in pDuration time.",
    "lineNumber": 369,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "An ID that references this transition to be passed to cancelTransition to stop an ongoing transition."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pInstance",
        "description": "The instance to transition it's color property.\npInstance's color will be transitioned either via pInstance.color = newColor\nor\npInstance.color.tint = newColor (if the color is defined as an object)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartColor",
        "description": "The start color"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndColor",
        "description": "The end color"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDuration",
        "description": "The duration of the transition"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pIterativeCallback",
        "description": "Callback to call every tick of the transition"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndCallback",
        "description": "Callback to call at the end of the transition"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "An ID that references this transition to be passed to cancelTransition to stop an ongoing transition."
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "cancelTransitionColor",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#cancelTransitionColor",
    "access": "public",
    "description": "Cancels an ongoing transition",
    "lineNumber": 453,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pID",
        "description": "The ID of the ongoing transition to cancel"
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getPointRotated",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getPointRotated",
    "access": "public",
    "description": "Calculates the position of a point after rotating it around a center point by a given angle.",
    "lineNumber": 470,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} An object with the rotated point's new x and y coordinates."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pRect",
        "description": "The rectangle object to rotate the point around.\npRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTheta",
        "description": "The angle (in radians) to rotate the point by."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint",
        "description": "The point object to rotate around the center of the rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint.x",
        "description": "The x-coordinate of the point to rotate."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint.y",
        "description": "The y-coordinate of the point to rotate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "An object with the rotated point's new x and y coordinates."
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "getPointsOfRotatedRect",
    "memberof": "src/eutils.js~EUtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/eutils.js~EUtilsSingleton#getPointsOfRotatedRect",
    "access": "public",
    "description": "/**\nCalculates the position of a rectangle's corner points and center point after rotating it around a center point by a given angle.",
    "lineNumber": 499,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} An object with the rotated rectangle's new corner points and center points."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pRect",
        "description": "The rectangle object to rotate the point around.\npRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTheta",
        "description": "The angle (in radians) to rotate the point by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "An object with the rotated rectangle's new corner points and center points."
    }
  },
  {
    "kind": "index",
    "content": "# EUtils\r\nA small plugin full of useful things.\r\n\r\n#INCLUDE SCRIPT eutils.min.js\r\n\r\n**🚧🚧 Docs coming soon 🚧🚧**\r\n",
    "longname": "Z:\\Business\\Evitca Studio\\github\\EUtils\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "",
    "longname": "",
    "name": "",
    "static": true,
    "access": "public"
  }
]