/**
* A utilities class
* @class UtilsSingleton
* @version 1.0.0
* @license Utils is free software, available under the terms of a MIT style License.
* @author https://github.com/doubleactii
* Copyright (c) 2023 Evitca Studio
*/
class UtilsSingleton{constructor(){this.transitions={},this.storedIDs=[]}decimalRand(t,r,e=1){t=Number((Math.random()*(t-r)+r).toFixed(e));return 1<=t?Math.floor(t):t}rand(t,r){t=Number(Math.random()*(t-r)+r);return Math.round(t)}getPercentage(t,r){return 100*t/r}clamp(t,r=0,e=1){return Math.max(r,Math.min(t,e))}lerp(t,r,e){return(1-e)*t+e*r}flooredLerp(t,r,e){return Math.floor(this.lerp(t,r,e))}round(t,r=1){return Math.round(r*t)/r}normalize(t,r,e){return e-r==0?1:(t-r)/(e-r)}within(t,r,e){return r<=t&&t<=e}formatIntegerWithCommas(t){return t.toFixed().toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,")}toRadians(t){return t*(Math.PI/180)}toDegrees(t){return t*(180/Math.PI)}pick(t){return t[Math.floor(Math.random()*t.length)]}removeProperties(t,r){if("object"==typeof t)for(const e in t)Array.isArray(r)&&r.includes(e)||t.hasOwnProperty(e)&&delete t[e]}prob(t){return!(t<=0)&&(100<=t||Math.floor(100*Math.random())+1<=t)}getInverseDirection(t){switch(t){case"north":return"south";case"south":return"north";case"east":return"west";case"west":return"east";case"northeast":return"southwest";case"northwest":return"southeast";case"southeast":return"northwest";case"southwest":return"northeast";default:console.error(`The direction ${t} is not supported.`)}}getAngleFromDirection(t){switch(t){case"north":return Math.PI/2;case"south":return 3*Math.PI/2;case"east":return 2*Math.PI;case"west":return Math.PI;case"northwest":return 3*Math.PI/4;case"northeast":return Math.PI/4;case"southwest":return 5*Math.PI/4;case"southeast":return 7*Math.PI/4;default:console.error(`The direction ${t} is not supported.`)}}centerRectangleOnParent(t,r,e,o,n,a){return{x:n+(e-t)/2,y:a+(o-r)/2}}getAngle(t,r){var e=t.y-r.y,t=t.x-r.x;return-Math.atan2(e,t)-Math.PI}getDistance(t,r){var e=t.y-r.y,t=t.x-r.x;return Math.sqrt(t*t+e*e)}calculateNewPositionFromDistanceAndAngle(t,r,e){var o={x:0,y:0};return o.x=t.x-r*Math.cos(e),o.y=t.y-r*Math.sin(e),o}calculateProportionalLength(t,r,e){return t/r*e}getDirection(t){return["east","northeast","north","northwest","west","southwest","south","southeast"][Math.abs(Math.floor(t*(180/Math.PI)/45+.5))%8]}linearDecay(t,r,e,o=.5){return Math.max(t*(1-r/e*o),1)}generateID(e=7){const o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";function t(){let r="";for(let t=0;t<e;t++)r+=o.charAt(Math.floor(Math.random()*o.length));return r}let r=t();for(;this.storedIDs.includes(r);)r=t();return this.storedIDs.push(r),r}decimalToHex(t,r=6){return"#"+(t+Math.pow(16,r)).toString(16).slice(-r).toUpperCase()}addIntensity(t,r){var t=this.grabColor(t).rgbArray,e=t[0],o=t[1],t=t[2];let n=0,a=0,s=0;var i=0===e&&0===o&&0===t;return(e||i)&&(n=e+Math.floor(255*r/100)),(o||i)&&(a=o+Math.floor(255*r/100)),(t||i)&&(s=t+Math.floor(255*r/100)),this.grabColor(this.clamp(n,0,255),this.clamp(a,0,255),this.clamp(s,0,255)).hex}rgbToHex(t,r,e){return"#"+[this.clamp(t,0,255),this.clamp(r,0,255),this.clamp(e,0,255)].map(function(t){return t.toString(16).padStart(2,"0")}).join("")}hexToRgb(t){return t=(t=3===(t=t.replace("#","")).length?t.replace(new RegExp("(.)","g"),"$1$1"):t).match(new RegExp("..","g")),[this.clamp(parseInt(t[0],16),0,255),this.clamp(parseInt(t[1],16),0,255),this.clamp(parseInt(t[2],16),0,255)]}rgbToDecimal(t,r,e){return t<<16|r<<8|e}hexToDecimal(t){return t=t.replace("#",""),parseInt(t,16)}grabColor(t=this.getRandomColor(),r,e){let o,n;return"number"==typeof t&&"number"==typeof r&&"number"==typeof e?o=this.rgbToHex(t,r,e):("number"==typeof t&&(t=this.decimalToHex(t)),o=t,n=this.hexToRgb(o)),{hex:o.toLowerCase(),hexTagless:o.replace("#","").toLowerCase(),rgb:"rgb("+n[0]+","+n[1]+","+n[2]+")",rgbArray:n,rgbObject:{r:n[0],g:n[1],b:n[2]},rgbNormal:[Math.round(n[0]/255*100)/100,Math.round(n[1]/255*100)/100,Math.round(n[2]/255*100)/100],decimal:this.hexToDecimal(o)}}getRandomColor(){let r="#";for(let t=0;t<6;t++)r+="0123456789ABCDEF"[Math.floor(16*Math.random())];return r}getRandomColorBetween(t,r,e=.5){return this.flooredLerp(this.grabColor(t).decimal,this.grabColor(r).decimal,e)}transitionColor(h,t="#000",r="#fff",l=1e3,e,o){if(globalThis.window){const c="function"==typeof e?e:null,u="function"==typeof o?o:null;let a,s,i;h?(a=h.id||this.generateID(),s="GeneratedParticle"===h.type,i="object"==typeof h.color&&h.color.constructor===Object,this.transitions[a]&&this.cancelTransitionColor(a)):a=this.generateID(),this.transitions[a]={duration:l,timeTracker:s?h.info.lifetime:0};const g=this.grabColor(t).rgbArray,d=this.grabColor(r).rgbArray,m=this;return this.transitions[a].step=t=>{if(m.transitions[a]){if(s){if(!h.info)return void(m.transitions[a]&&this.cancelTransitionColor(a));if(h.info.owner&&h.info.owner.settings.paused)return}m.transitions[a].lastTime||(m.transitions[a].lastTime=t);var r=t-m.transitions[a].lastTime,r=(m.transitions[a].timeTracker+=r,Math.min(m.transitions[a].timeTracker/m.transitions[a].duration,1)),e=parseInt(m.lerp(g[0],d[0],r),10),o=parseInt(m.lerp(g[1],d[1],r),10),n=parseInt(m.lerp(g[2],d[2],r),10),e=m.grabColor(e,o,n);c&&c(e),h&&(i?(h.color.tint=e.decimal,h.color=h.color):h.color=e.hex),1<=r||m.transitions[a].timeTracker>=l?(m.transitions[a]&&this.cancelTransitionColor(a),u&&u(e)):(m.transitions[a].req=globalThis.requestAnimationFrame(m.transitions[a].step),m.transitions[a].lastTime=t)}},this.transitions[a].req=globalThis.requestAnimationFrame(this.transitions[a].step),a}}cancelTransitionColor(t){this.transitions[t]&&(globalThis.cancelAnimationFrame(this.transitions[t].req),delete this.transitions[t])}getPointRotated(t,r,e){var o=t.x+t.width*("object"==typeof t.anchor&&t.anchor.x?t.anchor.x:.5),t=t.y+t.height*("object"==typeof t.anchor&&t.anchor.y?t.anchor.y:.5),n=e.x-o,e=e.y-t;return{x:n*Math.cos(r)-e*-Math.sin(r)+o,y:n*-Math.sin(r)+e*Math.cos(r)+t}}getPointsOfRotatedRect(t,r){return{tl:this.getPointRotated(t,r,{x:t.x,y:t.y}),tr:this.getPointRotated(t,r,{x:t.x+t.width,y:t.y}),bl:this.getPointRotated(t,r,{x:t.x,y:t.y+t.height}),br:this.getPointRotated(t,r,{x:t.x+t.width,y:t.y+t.height}),center:this.getPointRotated(t,r,{x:t.x+t.width/2,y:t.y+t.height/2})}}}const Utils=new UtilsSingleton;export{Utils};